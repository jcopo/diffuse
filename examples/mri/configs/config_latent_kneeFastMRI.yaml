dataset: "kneeFastMRI"
path_dataset: "${WORK}/diffuse/data/kneeFastMRI"

# Model paths
model_dir: "/lustre/fsn1/projects/rech/hlp/uha64uw/diffuse/data/kneeFastMRI/ldm/"

training:
    latent:
        cosine_schedule:
            init_value: 1.0e-3 # Learning rate
            decay_steps: 1500 # Number of epochs
            alpha: 1.0e-2 # Final learning rate
            exponent: 1 # Exponent for the cosine schedule
        ema:
            decay: 0.999 # EMA decay
        train_ratio: 0.8 # Training ratio
        batch_size: 32 # Batch size
        num_workers: 0 # Number of workers
        n_epochs: 4000 # Number of epochs

    score:
        cosine_schedule:
            init_value: 1.0e-4 # Learning rate
            decay_steps: 4000 # Number of epochs
            alpha: 1.0e-2 # Final learning rate
            exponent: 1 # Exponent for the cosine schedule
        ema:
            decay: 0.999 # EMA decay
        train_ratio: 0.8 # Training ratio
        batch_size: 32 # Batch size
        num_workers: 0 # Number of workers
        n_epochs: 4000 # Number of epochs

loss:
    latent:
        beta: 1.0e-5 # Regularization of KL divergence
    score:
        type: "noise_matching" # Or "score_matching"

inference:
    n_t: 50  # Number of time steps
    n_samples: 15  # Number of samples for denoiser
    n_samples_cntrst: 16  # Number of contrastive samples
    n_loop_opt: 3  # Number of optimization loops
    lr: 0.1 # Learning rate for optimization

sde:
    t0: 0.0 # Start time
    tf: 1.0 # End time

neural_network:
    unet:
        dt: 0.001 # Time step
        dim: 64 # Embedding dimension
        upsampling: "resize" # Upsampling method
        dim_mults: [1, 2, 4] # Multipliers for the embedding dimensions
        sample_size: 40 # Sample size
        channel_size: 4 # Number of channels

    autoencoder:
        in_channels: 2 # Number of channels in the input
        out_channels: 2 # Number of channels in the output
        down_block_types: ["DownBlock2D", "DownBlock2D", "DownBlock2D"] # Types of down blocks
        up_block_types: ["UpBlock2D", "UpBlock2D", "UpBlock2D"] # Types of up blocks
        block_out_channels: [128, 256, 512] # Output channels for each block
        layers_per_block: 4 # Number of layers per block
        sample_size: 320 # Sample size
        latent_channels: 4 # Number of channels in the latent space

mask:
    mask_type: "radial"  # or "spiral"
    num_lines: 5 # Number of lines

task: "quality"